/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
      ListNode one = l1;
      ListNode two = l2;
      ListNode dummyhead = new ListNode(0);
      ListNode current = dummyhead; 
      int carry = 0; 
      int sum = 0;
      int x = 0;
      int y = 0;
      while(one != null || two != null){
          x = (one != null) ? one.val : 0; 
          y = (two != null) ? two.val : 0; 
          sum = x + y + carry; 
          carry = sum/10; 
          current.next = new ListNode(sum % 10);
          current = current.next;
          if (one!= null){
              one = one.next;
          }
          if (two!= null){
              two = two.next;
          }
    
      }
      if (carry > 0) {
            current.next = new ListNode(carry);
        }
      return dummyhead.next; 
}
}
